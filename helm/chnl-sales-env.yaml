# Default values for helm-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
apiVersion: apps/v1
applicationName: chl-sales-helloworld-api
environment: it01
replicaCount: 1
namespace: chnlsales-offerqual
# ingressClass: nginx-ingress-public-dv

# kubernetes.io/ingress.class: nginx-ingress-public-dv
kubernetes.io/ingress.class: nginx-ingress-protected
#type: deployment

# spec:
#   rules:
#   - host: usage-consumption-private-yul-np-001.cloudapps.telus.com
#     http:
#       paths:
#       - backend:
#           serviceName: usage-consumption-demo
#           servicePort: 80
#         path: /v1/api/usage-consumption/


#containerPort: 8090

#TELUS Labels/Annotations
telus:
  cmdbId: "111111"
  costCentre: "222222"
  organization: "Sales"
  mailingList: "donotreply@telus.com"

# Allows you set arbitrary env variables.
extraEnvs:
  - name: ENV
    value: DEV-NP
  - name: SPRING_PROFILES_ACTIVE
    value: it01
#  - name: GOOGLE_CLOUD_PROJECT
#    value: cio-creditmgmt-np-15dfbe
#extraEnvs:
#  - name: envname
#    value: envvalue
#  - name: envname2
#    value: envvalue2

# Allows you to add any config files and specify a path location in the volumeMounts
# such as application.yaml or log4j2.properties.  Since this is clear in src control
# please do no use for sensitive data such as keys and passwords.  See Secrets.
#configmaps:
# application.yaml: |
#   host:
#     programapi: https://test.com/url
# log4j2.properties: |
#   key = value

# initContainers: |
#   - name: do-something
#     image: busybox
#     command: ['do', 'something']

# If you add a configmap you must add a volume names "configmap" to mount to a path of your choosing
# you can also mount arbitrary volumes or otherwise leave as an empty array
volumeMounts: []
#volumeMounts:
# - name: configmap
#   path: /etc/config

#  - name: cache-dir
#    path: /etc/cache
#  - name: test-volume
#    path: /etc/gce-pd

livenessProbe:
  httpGet:
    path: /actuator/health
    port: 8080

readinessProbe:
  httpGet:
    path: /actuator/health
    port: 8080

    # livenessProbe:
    #   httpGet:
    #     path: /v1/api/
    #     port: 80

    # readinessProbe:
    #   httpGet:
    #     path: /v1/api/
    #     port: 80


    # Volume mounts should have an equivelent volume name defined of required type
    # this example creates and emptyDir type volume for ephemeral data
    # volumes: |
    #   - name: cache-dir
    #     emtptyDir: {}
    #   - name: test-volume
    # This GCE PD must already exist.
#     gcePersistentDisk:
#      pdName: my-data-disk
#      fsType: ext4

# Mount precreated secrets to a volume, it is determined the helm chart should not create secrets
# to protect security.  Please do not store secret data such as keys, keystores or passwords in Git
# or in a configmap
secretMounts: []
#secretMounts:
#  - name: keystores
#    secretName: app-keystores
#    path: /etc/secrets/keystores

image:
  repository: gcr.io/cio-gke-devops-e4993356/chnlsales-offerqual/chl-sales-helloworld-api
  tag: latest
  pullPolicy: IfNotPresent

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  # path: /
  # hosts:
  #   - "butterfly-api-private-yul-np-001"
  # tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
  # class: kong
  # Can disable modsecurity rule 949110 via annotation below to prevent 403 errors common in either of the following cases:
  #    - You wish to allow PUT/DELETE HTTP methods
  #    - Consumers must make repeated requests, to prevent "Inbound Anomaly Score Exceeded" (ie React UIs).

  #annotations:
  #nginx.ingress.kubernetes.io/modsecurity-snippet: SecRuleRemoveByID 949110


# enable on kong ingress and add plugins
# insure the hostname used is cname to the kong ingress A record.
# class: kong
# kongPlugins: key-auth

# create required kong plugins
# plugins are reusable within namespace
kong:
  enabled: false
  plugins:
    - name: key-auth
      plugin: key-auth
      config:
        key_names: apikey
  #   - name: acl
  #     plugin: acl
  #     config:
  #       name: test
  # consumers:
  #   - name: testconsumer
  #     username: test
  # credentials:
  #   - name: testcredential
  #     consumer: testconsumer
  #     type: key-auth
  # add any additional credential config as required by type.
  # key for key-auth is autogenerated and can be seen via kubectl get kongcredential...
  # config:
  #   key: value
  # Add custom kong ingress settings
  ingress:
    upstream:
    #     healthchecks:
    #       passive:
    #         healthy:
    #           http_statuses:
    #           - 200
    #           successes: 0
    #         unhealthy:
    #           http_failures: 0
    #           http_statuses:
    #           - 429
    #           - 503
    #           tcp_failures: 0
    #           timeouts: 0
    proxy:
    #     protocol: http
    #     path: /
    #     connect_timeout: 10000
    #     retries: 10
    #     read_timeout: 10000
    #     write_timeout: 10000
    route:
  #     methods:
  #     - POST
  #     - GET
  #     regex_priority: 0
  #     strip_path: false
  #     preserve_host: true
  #     protocols:
  #     - http
  #     - https




resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
#  cpu: 100m
#  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

# sidecar: |
#  - name: cloudsql-proxy
#    image: gcr.io/cloudsql-docker/gce-proxy:1.16
#    command: ["/cloud_sql_proxy", "-instances=cio-creditmgmt-np-15dfbe:northamerica-northeast1:cio-creditmgmt-np=tcp:5432"]
#    securityContext:
#      runAsUser: 2
#      allowPrivilegeEscalation: false